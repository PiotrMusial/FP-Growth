  FP-Growth.cpp
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(28): warning C4305: 'initializing': truncation from 'double' to 'float'
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(41): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(47): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(72): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(99): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(115): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(120): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(128): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(176): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(194): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(199): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(225): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(244): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(249): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(266): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(272): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(292): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(298): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(306): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(315): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(325): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(337): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(430): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(456): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(464): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(465): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(479): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(480): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(498): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(505): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(506): warning C4018: '<': signed/unsigned mismatch
e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(530): warning C4018: '<': signed/unsigned mismatch
d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\utility(147): warning C4244: 'initializing': conversion from 'const float' to 'int', possible loss of data
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\algorithm(3084): note: see reference to function template instantiation 'std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>::pair<std::string,float,0>(const std::pair<std::string,float> &)' being compiled
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\algorithm(3082): note: see reference to function template instantiation 'std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>::pair<std::string,float,0>(const std::pair<std::string,float> &)' being compiled
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\algorithm(3178): note: see reference to function template instantiation 'std::pair<_RanIt,_RanIt> std::_Partition_by_median_guess_unchecked<_RanIt,bool(__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)>(_RanIt,_RanIt,_Pr)' being compiled
          with
          [
              _RanIt=std::pair<std::string,float> *,
              _Pr=bool (__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\algorithm(3212): note: see reference to function template instantiation 'void std::_Sort_unchecked<std::pair<std::string,float>*,int,bool(__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)>(_RanIt,_RanIt,_Diff,_Pr)' being compiled
          with
          [
              _RanIt=std::pair<std::string,float> *,
              _Diff=int,
              _Pr=bool (__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)
          ]
  e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(97): note: see reference to function template instantiation 'void std::sort<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<_Ty>>>,bool(__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)>(_RanIt,_RanIt,_Pr)' being compiled
          with
          [
              _Ty=std::pair<std::string,float>,
              _RanIt=std::_Vector_iterator<std::_Vector_val<std::_Simple_types<std::pair<std::string,float>>>>,
              _Pr=bool (__cdecl *)(const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &,const std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &)
          ]
d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\utility(234): warning C4244: 'initializing': conversion from 'int' to 'float', possible loss of data
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xmemory0(943): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int,0>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&) noexcept' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xmemory0(945): note: see reference to function template instantiation 'std::pair<const _Kty,_Ty>::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int,0>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&) noexcept' being compiled
          with
          [
              _Kty=std::string,
              _Ty=float
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xtree(766): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(_Alloc &,_Objty *const ,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,float>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,float>>>::void_pointer>>,
              _Ty=std::pair<const std::string,float>,
              _Objty=std::pair<const std::string,float>
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xtree(773): note: see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(_Alloc &,_Objty *const ,std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Alloc=std::allocator<std::_Tree_node<std::pair<const std::string,float>,std::_Default_allocator_traits<std::allocator<std::pair<const std::string,float>>>::void_pointer>>,
              _Ty=std::pair<const std::string,float>,
              _Objty=std::pair<const std::string,float>
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xtree(961): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Alloc=std::allocator<std::pair<const std::string,float>>,
              _Traits=std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<const std::string,float>>,false>
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\xtree(962): note: see reference to function template instantiation 'std::_Tree_node<_Ty,std::_Default_allocator_traits<_Alloc>::void_pointer> *std::_Tree_comp_alloc<_Traits>::_Buynode<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Alloc=std::allocator<std::pair<const std::string,float>>,
              _Traits=std::_Tmap_traits<std::string,float,std::less<std::string>,std::allocator<std::pair<const std::string,float>>,false>
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\map(208): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,float,_Pr,_Alloc,false>>::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float>>
          ]
  d:\programy\visual studio community 2017\vc\tools\msvc\14.12.25827\include\map(208): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,float,_Pr,_Alloc,false>>::emplace<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>>(std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int> &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Pr=std::less<std::string>,
              _Alloc=std::allocator<std::pair<const std::string,float>>
          ]
  e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(77): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,float,std::less<_Kty>,std::allocator<_Ty>>::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>,void>(_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Valty=std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>
          ]
  e:\moje dokumenty\praca licencjacka\vc++\fp-growth\fp-growth\fp-growth.cpp(77): note: see reference to function template instantiation 'std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<_Ty>>>,bool> std::map<std::string,float,std::less<_Kty>,std::allocator<_Ty>>::insert<std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>,void>(_Valty &&)' being compiled
          with
          [
              _Ty=std::pair<const std::string,float>,
              _Kty=std::string,
              _Valty=std::pair<std::basic_string<char,std::char_traits<char>,std::allocator<char>>,int>
          ]
  FP-Growth.vcxproj -> E:\Moje Dokumenty\Praca licencjacka\VC++\FP-Growth\Debug\FP-Growth.exe
